# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/71d0d617-560d-41a8-a93c-dfeee4e3d61c";
      fsType = "xfs";
    };

  boot.initrd.luks.devices."luks-a0f55117-91fc-4252-863a-bff6fd102414" = {
    device = "/dev/disk/by-uuid/a0f55117-91fc-4252-863a-bff6fd102414";
    #keyFile = "/key/key/venus";
    #preLVM = false;
  };

  #boot.initrd.postDeviceCommands = pkgs.lib.mkBefore ''
   # mkdir -m 0755 -p /key
   # sleep 3
   # mount -n -t vfat -o ro `findfs UUID=0709-7A73` /key
   # '';

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/C611-8DBC";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/50a974e7-5a94-4f61-87b5-70156ab9f553"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
